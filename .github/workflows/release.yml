name: release

on:
  workflow_call:
    inputs:
      semver-bump:
        type: string
        default: prerelease
  workflow_dispatch:
    inputs:
      semver-bump:
        description: Semver bump release type
        required: true
        type: choice
        default: patch
        options:
          - major
          - minor
          - patch

concurrency: release

env:
  SEMVER_BUMP: ${{inputs.semver-bump}}

jobs:

  check-build-params:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: validate only prerelease semver bump for publishing @next
        run: |
          [[ ${{github.event_name}} == "push" ]] && exit 0
          [[ $SEMVER_BUMP == "prerelease" ]] && exit 1 || exit 0
      - name: validate changesets for release
        run: |
          [[ ${{github.event_name}} == "push" ]] && exit 0
          [[ $SEMVER_BUMP == "prerelease" ]] && exit 1
          ./.github/workflows/changelog_check.sh CHANGELOG.md

  verified:
    uses: ./.github/workflows/verify.yml
    needs: [ check-build-params ]

  create-git-tag:
    name: create release tag
    runs-on: ubuntu-latest
    needs: [ verified ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: semver
        id: semver
        run: |
          [[ $SEMVER_BUMP = "prerelease" ]] && NPM_TAG="next" || NPM_TAG="latest"
          [[ $SEMVER_BUMP = "prerelease" ]] && PRERELEASE="true" || PRERELEASE="false"
          VERSION=$(npm version $SEMVER_BUMP --no-git-tag-version)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "prerelease=$PRERELEASE" >> "$GITHUB_OUTPUT"
          echo "npm-tag=$NPM_TAG" >> "$GITHUB_OUTPUT"
          ./.github/workflows/changelog_rollover.sh CHANGELOG.md $VERSION $VERSION
          git config --global user.name "Adam McKee"
          git config --global user.email "adam.be.g84d@gmail.com"
          git commit -am "increment @$NPM_TAG to $VERSION"
          git tag $VERSION
          git push --atomic origin main $VERSION
    outputs:
      prerelease: ${{steps.semver.outputs.prerelease}}
      version: ${{steps.semver.outputs.version}}
      npm-tag: ${{steps.semver.outputs.npm-tag}}

  create-gh-release:
    name: create github release
    runs-on: ubuntu-latest
    needs: [ create-git-tag ]
    permissions:
      contents: write
    steps:
      - name: create github release
        env:
          PRERELEASE: ${{needs.create-git-tag.outputs.prerelease}}
          TAG: ${{needs.create-git-tag.outputs.version}}
          GH_TOKEN: ${{ github.token }}
        run: |
          VERSION="${TAG:1}"
          CHANGELOG=$(./.github/workflows/changelog_get.sh CHANGELOG.md "$TAG")
          NPM_URL="https://www.npmjs.com/package/vite-plugin-html-inline-sources/v/$VERSION"
          RELEASE_NOTES="[Published on npm]($NPM_URL)\r\n\r\n### Release notes\r\n\r\n$CHANGELOG"
          echo "$RELEASE_NOTES" | gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/eighty4/vite-plugin-html-inline-sources/releases \
            -f tag_name="$TAG" \
            -f name="$TAG" \
            -F body=@- \
            -F draft=false \
            -F prerelease=$PRERELEASE \
            -F generate_release_notes=false

  npm-publish:
    name: publish to npm
    needs: [ create-gh-release, create-git-tag ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          ref: ${{needs.create-git-tag.outputs.version}}
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm
          registry-url: https://registry.npmjs.org
      - name: publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          NPM_TAG: ${{needs.create-git-tag.outputs.npm-tag}}
          VERSION: ${{needs.create-git-tag.outputs.version}}
        run: pnpm publish --access public --tag $NPM_TAG --no-git-checks
